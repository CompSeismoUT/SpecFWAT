name: Conda Detection and Environment Setup

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  conda-detection:
    name: Detect and Setup Conda Environment
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Check system conda installation
      id: system-conda
      run: |
        echo "=== Checking for system conda installation ==="
        if command -v conda &> /dev/null; then
          echo "✅ Conda found in system PATH"
          echo "conda-available=true" >> $GITHUB_OUTPUT
          conda --version
          conda info
        else
          echo "❌ Conda not found in system PATH"
          echo "conda-available=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Setup Miniconda
      if: steps.system-conda.outputs.conda-available == 'false'
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        activate-environment: specfwat-env
        python-version: "3.11"
        channels: conda-forge,defaults
        channel-priority: flexible
    
    - name: Verify conda installation
      shell: bash -l {0}
      run: |
        echo "=== Conda installation verification ==="
        conda --version
        conda info
        conda list
        
        echo "=== Conda configuration ==="
        conda config --show
        
        echo "=== Available channels ==="
        conda config --show channels
    
    - name: Create SpecFWAT conda environment
      shell: bash -l {0}
      run: |
        echo "=== Creating SpecFWAT conda environment ==="
        conda create -n specfwat-build -y python=3.11
        conda activate specfwat-build
        
        echo "=== Installing basic scientific computing packages ==="
        conda install -y -c conda-forge \
          cmake \
          make \
          gfortran \
          openmpi \
          "hdf5=*=mpi_openmpi_*" \
          openblas \
          lapack \
          yaml-cpp \
          numpy \
          scipy \
          matplotlib
    
    - name: Test conda environment
      shell: bash -l {0}
      run: |
        echo "=== Testing conda environment ==="
        conda activate specfwat-build
        
        echo "=== Checking installed packages ==="
        conda list
        
        echo "=== Verifying key dependencies ==="
        echo "CMake version:"
        cmake --version || echo "CMake not available"
        
        echo "Fortran compiler:"
        gfortran --version || echo "Gfortran not available"
        
        echo "MPI info:"
        mpirun --version || echo "MPI not available"
        
        echo "HDF5 info:"
        conda list | grep hdf5 || echo "HDF5 not found in conda list"
        
        echo "Python packages:"
        python -c "import numpy; print(f'NumPy: {numpy.__version__}')" || echo "NumPy not available"
        python -c "import scipy; print(f'SciPy: {scipy.__version__}')" || echo "SciPy not available"
    
    - name: Export conda environment
      shell: bash -l {0}
      run: |
        echo "=== Exporting conda environment ==="
        conda activate specfwat-build
        conda env export > specfwat-environment.yml
        echo "=== Environment file contents ==="
        cat specfwat-environment.yml
    
    - name: Upload environment file as artifact
      uses: actions/upload-artifact@v4
      with:
        name: conda-environment
        path: specfwat-environment.yml
        retention-days: 30
    
    - name: Test basic CMake configuration
      shell: bash -l {0}
      run: |
        echo "=== Testing CMake configuration ==="
        conda activate specfwat-build
        
        # Create a simple build directory to test dependencies
        mkdir -p test-build
        cd test-build
        
        # Try to configure with CMake to check for missing dependencies
        echo "=== Running CMake configure test ==="
        cmake .. -DCMAKE_BUILD_TYPE=Release \
               -DUSE_HDF5=ON \
               -DUSE_EXTERNAL_LIBS=OFF \
               -DNO_UPDATE_SUBMODULE=ON || \
        echo "❌ CMake configuration failed - some dependencies may be missing"
        
        # Clean up
        cd ..
        rm -rf test-build
    
    - name: Summary
      shell: bash -l {0}
      run: |
        echo "=== Conda Detection Summary ==="
        echo "✅ Conda successfully detected and configured"
        echo "✅ SpecFWAT build environment created"
        echo "✅ Key dependencies installed via conda"
        echo "✅ Environment exported for reproducibility"
        echo ""
        echo "To use this environment locally:"
        echo "1. conda env create -f specfwat-environment.yml"
        echo "2. conda activate specfwat-build"
        echo "3. Build SpecFWAT with CMake"